//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool.
// Code is generated on: 10/08/2020 00:40:58
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace SecurityManagerContext
{

    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "SecurityManager")]
    [ProviderAttribute(typeof(Devart.Data.SqlServer.Linq.Provider.SqlDataProvider))]
    public partial class SecurityManagerDataContext : Devart.Data.Linq.DataContext
    {
        private static System.Data.Linq.Mapping.MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();
        public static Devart.Data.Linq.CompiledQueryCache compiledQueryCache = Devart.Data.Linq.CompiledQueryCache.RegisterDataContext(typeof(SecurityManagerDataContext));

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);

        partial void InsertSecAplicacion(SecAplicacion instance);
        partial void UpdateSecAplicacion(SecAplicacion instance);
        partial void DeleteSecAplicacion(SecAplicacion instance);
        partial void InsertSecModulo(SecModulo instance);
        partial void UpdateSecModulo(SecModulo instance);
        partial void DeleteSecModulo(SecModulo instance);
        partial void InsertSecOpcion(SecOpcion instance);
        partial void UpdateSecOpcion(SecOpcion instance);
        partial void DeleteSecOpcion(SecOpcion instance);
        partial void InsertSecOrganizacion(SecOrganizacion instance);
        partial void UpdateSecOrganizacion(SecOrganizacion instance);
        partial void DeleteSecOrganizacion(SecOrganizacion instance);
        partial void InsertSecPerfil(SecPerfil instance);
        partial void UpdateSecPerfil(SecPerfil instance);
        partial void DeleteSecPerfil(SecPerfil instance);
        partial void InsertSecPerfilOpcion(SecPerfilOpcion instance);
        partial void UpdateSecPerfilOpcion(SecPerfilOpcion instance);
        partial void DeleteSecPerfilOpcion(SecPerfilOpcion instance);
        partial void InsertSecUsuario(SecUsuario instance);
        partial void UpdateSecUsuario(SecUsuario instance);
        partial void DeleteSecUsuario(SecUsuario instance);

        #endregion

        public SecurityManagerDataContext() :
        base(@"Data Source=DELLSDAVID\SQLEXPRESS;Initial Catalog=SecurityManager;Integrated Security=True;Persist Security Info=True", mappingSource)
        {
            OnCreated();
        }

        public SecurityManagerDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public SecurityManagerDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public SecurityManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public SecurityManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<SecAplicacion> SecAplicacions
        {
            get
            {
                return this.GetTable<SecAplicacion>();
            }
        }

        public Devart.Data.Linq.Table<SecModulo> SecModulos
        {
            get
            {
                return this.GetTable<SecModulo>();
            }
        }

        public Devart.Data.Linq.Table<SecOpcion> SecOpcions
        {
            get
            {
                return this.GetTable<SecOpcion>();
            }
        }

        public Devart.Data.Linq.Table<SecOrganizacion> SecOrganizacions
        {
            get
            {
                return this.GetTable<SecOrganizacion>();
            }
        }

        public Devart.Data.Linq.Table<SecPerfil> SecPerfils
        {
            get
            {
                return this.GetTable<SecPerfil>();
            }
        }

        public Devart.Data.Linq.Table<SecPerfilOpcion> SecPerfilOpcions
        {
            get
            {
                return this.GetTable<SecPerfilOpcion>();
            }
        }

        public Devart.Data.Linq.Table<SecUsuario> SecUsuarios
        {
            get
            {
                return this.GetTable<SecUsuario>();
            }
        }
    }


    /// <summary>
    /// There are no comments for SecAplicacion in the schema.
    /// </summary>
    [Table(Name = @"[dbo].SEC_APLICACION")]
    public partial class SecAplicacion : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _IdApp;

        private string _Nombre;

        private System.Nullable<bool> _Activo;

        private string _AppKey;

        private EntitySet<SecModulo> _SecModulos;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdAppChanging(int value);
        partial void OnIdAppChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnActivoChanging(System.Nullable<bool> value);
        partial void OnActivoChanged();
        partial void OnAppKeyChanging(string value);
        partial void OnAppKeyChanged();
        #endregion

        public SecAplicacion()
        {
            this._SecModulos = new EntitySet<SecModulo>(new Action<SecModulo>(this.attach_SecModulos), new Action<SecModulo>(this.detach_SecModulos));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdApp in the schema.
        /// </summary>
        [Column(Name = @"ID_APP", Storage = "_IdApp", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int IdApp
        {
            get
            {
                return this._IdApp;
            }
            set
            {
                if (this._IdApp != value)
                {
                    this.OnIdAppChanging(value);
                    this.SendPropertyChanging();
                    this._IdApp = value;
                    this.SendPropertyChanged("IdApp");
                    this.OnIdAppChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL")]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activo in the schema.
        /// </summary>
        [Column(Name = @"ACTIVO", Storage = "_Activo", DbType = "BIT")]
        public System.Nullable<bool> Activo
        {
            get
            {
                return this._Activo;
            }
            set
            {
                if (this._Activo != value)
                {
                    this.OnActivoChanging(value);
                    this.SendPropertyChanging();
                    this._Activo = value;
                    this.SendPropertyChanged("Activo");
                    this.OnActivoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AppKey in the schema.
        /// </summary>
        [Column(Name = @"APP_KEY", Storage = "_AppKey", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string AppKey
        {
            get
            {
                return this._AppKey;
            }
            set
            {
                if (this._AppKey != value)
                {
                    this.OnAppKeyChanging(value);
                    this.SendPropertyChanging();
                    this._AppKey = value;
                    this.SendPropertyChanged("AppKey");
                    this.OnAppKeyChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecAplicacion_SecModulo", Storage="_SecModulos", OtherKey="AplicacionId")]
        public EntitySet<SecModulo> SecModulos
        {
            get
            {
                return this._SecModulos;
            }
            set
            {
                this._SecModulos.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_SecModulos(SecModulo entity)
        {
            this.SendPropertyChanging("SecModulos");
            entity.SecAplicacion = this;
        }
    
        private void detach_SecModulos(SecModulo entity)
        {
            this.SendPropertyChanging("SecModulos");
            entity.SecAplicacion = null;
        }
    }


    /// <summary>
    /// There are no comments for SecModulo in the schema.
    /// </summary>
    [Table(Name = @"[dbo].SEC_MODULO")]
    public partial class SecModulo : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _SecModuloId;

        private System.Nullable<int> _ModuloPadreId;

        private int _AplicacionId;

        private string _Nombre;

        private System.Nullable<bool> _Activo;

        private EntityRef<SecAplicacion> _SecAplicacion;

        private EntitySet<SecModulo> _SecModulos;

        private EntityRef<SecModulo> _SecModulo1;

        private EntitySet<SecOpcion> _SecOpcions;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSecModuloIdChanging(int value);
        partial void OnSecModuloIdChanged();
        partial void OnModuloPadreIdChanging(System.Nullable<int> value);
        partial void OnModuloPadreIdChanged();
        partial void OnAplicacionIdChanging(int value);
        partial void OnAplicacionIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnActivoChanging(System.Nullable<bool> value);
        partial void OnActivoChanged();
        #endregion

        public SecModulo()
        {
            this._SecAplicacion  = default(EntityRef<SecAplicacion>);
            this._SecModulos = new EntitySet<SecModulo>(new Action<SecModulo>(this.attach_SecModulos), new Action<SecModulo>(this.detach_SecModulos));
            this._SecModulo1  = default(EntityRef<SecModulo>);
            this._SecOpcions = new EntitySet<SecOpcion>(new Action<SecOpcion>(this.attach_SecOpcions), new Action<SecOpcion>(this.detach_SecOpcions));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SecModuloId in the schema.
        /// </summary>
        [Column(Name = @"SEC_MODULO_ID", Storage = "_SecModuloId", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int SecModuloId
        {
            get
            {
                return this._SecModuloId;
            }
            set
            {
                if (this._SecModuloId != value)
                {
                    this.OnSecModuloIdChanging(value);
                    this.SendPropertyChanging();
                    this._SecModuloId = value;
                    this.SendPropertyChanged("SecModuloId");
                    this.OnSecModuloIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModuloPadreId in the schema.
        /// </summary>
        [Column(Name = @"MODULO_PADRE_ID", Storage = "_ModuloPadreId", DbType = "INT")]
        public System.Nullable<int> ModuloPadreId
        {
            get
            {
                return this._ModuloPadreId;
            }
            set
            {
                if (this._ModuloPadreId != value)
                {
                    if (this._SecModulo1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnModuloPadreIdChanging(value);
                    this.SendPropertyChanging();
                    this._ModuloPadreId = value;
                    this.SendPropertyChanged("ModuloPadreId");
                    this.OnModuloPadreIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AplicacionId in the schema.
        /// </summary>
        [Column(Name = @"APLICACION_ID", Storage = "_AplicacionId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int AplicacionId
        {
            get
            {
                return this._AplicacionId;
            }
            set
            {
                if (this._AplicacionId != value)
                {
                    if (this._SecAplicacion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnAplicacionIdChanging(value);
                    this.SendPropertyChanging();
                    this._AplicacionId = value;
                    this.SendPropertyChanged("AplicacionId");
                    this.OnAplicacionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL")]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activo in the schema.
        /// </summary>
        [Column(Name = @"ACTIVO", Storage = "_Activo", DbType = "BIT")]
        public System.Nullable<bool> Activo
        {
            get
            {
                return this._Activo;
            }
            set
            {
                if (this._Activo != value)
                {
                    this.OnActivoChanging(value);
                    this.SendPropertyChanging();
                    this._Activo = value;
                    this.SendPropertyChanged("Activo");
                    this.OnActivoChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecAplicacion_SecModulo", Storage="_SecAplicacion", ThisKey="AplicacionId", IsForeignKey=true)]
        public SecAplicacion SecAplicacion
        {
            get
            {
                return this._SecAplicacion.Entity;
            }
            set
            {
                SecAplicacion previousValue = this._SecAplicacion.Entity;
                if ((previousValue != value) || (this._SecAplicacion.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecAplicacion.Entity = null;
                        previousValue.SecModulos.Remove(this);
                    }
                    this._SecAplicacion.Entity = value;
                    if (value != null)
                    {
                        this._AplicacionId = value.IdApp;
                        value.SecModulos.Add(this);
                    }
                    else
                    {
                        this._AplicacionId = default(int);
                    }
                    this.SendPropertyChanged("SecAplicacion");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecModulo_SecModulo", Storage="_SecModulos", OtherKey="ModuloPadreId")]
        public EntitySet<SecModulo> SecModulos
        {
            get
            {
                return this._SecModulos;
            }
            set
            {
                this._SecModulos.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecModulo_SecModulo", Storage="_SecModulo1", ThisKey="ModuloPadreId", IsForeignKey=true)]
        public SecModulo SecModulo1
        {
            get
            {
                return this._SecModulo1.Entity;
            }
            set
            {
                SecModulo previousValue = this._SecModulo1.Entity;
                if ((previousValue != value) || (this._SecModulo1.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecModulo1.Entity = null;
                        previousValue.SecModulos.Remove(this);
                    }
                    this._SecModulo1.Entity = value;
                    if (value != null)
                    {
                        this._ModuloPadreId = value.SecModuloId;
                        value.SecModulos.Add(this);
                    }
                    else
                    {
                        this._ModuloPadreId = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("SecModulo1");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecModulo_SecOpcion", Storage="_SecOpcions", OtherKey="SecModuloId")]
        public EntitySet<SecOpcion> SecOpcions
        {
            get
            {
                return this._SecOpcions;
            }
            set
            {
                this._SecOpcions.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_SecModulos(SecModulo entity)
        {
            this.SendPropertyChanging("SecModulos");
            entity.SecModulo1 = this;
        }
    
        private void detach_SecModulos(SecModulo entity)
        {
            this.SendPropertyChanging("SecModulos");
            entity.SecModulo1 = null;
        }

        private void attach_SecOpcions(SecOpcion entity)
        {
            this.SendPropertyChanging("SecOpcions");
            entity.SecModulo = this;
        }
    
        private void detach_SecOpcions(SecOpcion entity)
        {
            this.SendPropertyChanging("SecOpcions");
            entity.SecModulo = null;
        }
    }


    /// <summary>
    /// There are no comments for SecOpcion in the schema.
    /// </summary>
    [Table(Name = @"[dbo].SEC_OPCION")]
    public partial class SecOpcion : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _SecOpcionId;

        private int _SecModuloId;

        private string _Nombre;

        private string _OpcionKey;

        private bool _Activo;

        private EntityRef<SecModulo> _SecModulo;

        private EntitySet<SecPerfilOpcion> _SecPerfilOpcions;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSecOpcionIdChanging(int value);
        partial void OnSecOpcionIdChanged();
        partial void OnSecModuloIdChanging(int value);
        partial void OnSecModuloIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnOpcionKeyChanging(string value);
        partial void OnOpcionKeyChanged();
        partial void OnActivoChanging(bool value);
        partial void OnActivoChanged();
        #endregion

        public SecOpcion()
        {
            this._SecModulo  = default(EntityRef<SecModulo>);
            this._SecPerfilOpcions = new EntitySet<SecPerfilOpcion>(new Action<SecPerfilOpcion>(this.attach_SecPerfilOpcions), new Action<SecPerfilOpcion>(this.detach_SecPerfilOpcions));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SecOpcionId in the schema.
        /// </summary>
        [Column(Name = @"SEC_OPCION_ID", Storage = "_SecOpcionId", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int SecOpcionId
        {
            get
            {
                return this._SecOpcionId;
            }
            set
            {
                if (this._SecOpcionId != value)
                {
                    this.OnSecOpcionIdChanging(value);
                    this.SendPropertyChanging();
                    this._SecOpcionId = value;
                    this.SendPropertyChanged("SecOpcionId");
                    this.OnSecOpcionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SecModuloId in the schema.
        /// </summary>
        [Column(Name = @"SEC_MODULO_ID", Storage = "_SecModuloId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int SecModuloId
        {
            get
            {
                return this._SecModuloId;
            }
            set
            {
                if (this._SecModuloId != value)
                {
                    if (this._SecModulo.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSecModuloIdChanging(value);
                    this.SendPropertyChanging();
                    this._SecModuloId = value;
                    this.SendPropertyChanged("SecModuloId");
                    this.OnSecModuloIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL")]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OpcionKey in the schema.
        /// </summary>
        [Column(Name = @"OPCION_KEY", Storage = "_OpcionKey", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string OpcionKey
        {
            get
            {
                return this._OpcionKey;
            }
            set
            {
                if (this._OpcionKey != value)
                {
                    this.OnOpcionKeyChanging(value);
                    this.SendPropertyChanging();
                    this._OpcionKey = value;
                    this.SendPropertyChanged("OpcionKey");
                    this.OnOpcionKeyChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activo in the schema.
        /// </summary>
        [Column(Name = @"ACTIVO", Storage = "_Activo", CanBeNull = false, DbType = "BIT NOT NULL")]
        public bool Activo
        {
            get
            {
                return this._Activo;
            }
            set
            {
                if (this._Activo != value)
                {
                    this.OnActivoChanging(value);
                    this.SendPropertyChanging();
                    this._Activo = value;
                    this.SendPropertyChanged("Activo");
                    this.OnActivoChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecModulo_SecOpcion", Storage="_SecModulo", ThisKey="SecModuloId", IsForeignKey=true)]
        public SecModulo SecModulo
        {
            get
            {
                return this._SecModulo.Entity;
            }
            set
            {
                SecModulo previousValue = this._SecModulo.Entity;
                if ((previousValue != value) || (this._SecModulo.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecModulo.Entity = null;
                        previousValue.SecOpcions.Remove(this);
                    }
                    this._SecModulo.Entity = value;
                    if (value != null)
                    {
                        this._SecModuloId = value.SecModuloId;
                        value.SecOpcions.Add(this);
                    }
                    else
                    {
                        this._SecModuloId = default(int);
                    }
                    this.SendPropertyChanged("SecModulo");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecOpcion_SecPerfilOpcion", Storage="_SecPerfilOpcions", OtherKey="SecOpcionId")]
        public EntitySet<SecPerfilOpcion> SecPerfilOpcions
        {
            get
            {
                return this._SecPerfilOpcions;
            }
            set
            {
                this._SecPerfilOpcions.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_SecPerfilOpcions(SecPerfilOpcion entity)
        {
            this.SendPropertyChanging("SecPerfilOpcions");
            entity.SecOpcion = this;
        }
    
        private void detach_SecPerfilOpcions(SecPerfilOpcion entity)
        {
            this.SendPropertyChanging("SecPerfilOpcions");
            entity.SecOpcion = null;
        }
    }


    /// <summary>
    /// There are no comments for SecOrganizacion in the schema.
    /// </summary>
    [Table(Name = @"[dbo].SEC_ORGANIZACION")]
    public partial class SecOrganizacion : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _OrganizacionId;

        private string _Nombre;

        private string _OrganizacionKey;

        private System.Nullable<bool> _Activo;

        private string _Direccion;

        private string _Email;

        private System.Nullable<System.DateTime> _Fechainicio;

        private System.Nullable<System.DateTime> _Fechafin;

        private EntitySet<SecPerfil> _SecPerfils;

        private EntitySet<SecUsuario> _SecUsuarios;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnOrganizacionIdChanging(int value);
        partial void OnOrganizacionIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnOrganizacionKeyChanging(string value);
        partial void OnOrganizacionKeyChanged();
        partial void OnActivoChanging(System.Nullable<bool> value);
        partial void OnActivoChanged();
        partial void OnDireccionChanging(string value);
        partial void OnDireccionChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnFechainicioChanging(System.Nullable<System.DateTime> value);
        partial void OnFechainicioChanged();
        partial void OnFechafinChanging(System.Nullable<System.DateTime> value);
        partial void OnFechafinChanged();
        #endregion

        public SecOrganizacion()
        {
            this._SecPerfils = new EntitySet<SecPerfil>(new Action<SecPerfil>(this.attach_SecPerfils), new Action<SecPerfil>(this.detach_SecPerfils));
            this._SecUsuarios = new EntitySet<SecUsuario>(new Action<SecUsuario>(this.attach_SecUsuarios), new Action<SecUsuario>(this.detach_SecUsuarios));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for OrganizacionId in the schema.
        /// </summary>
        [Column(Name = @"ORGANIZACION_ID", Storage = "_OrganizacionId", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int OrganizacionId
        {
            get
            {
                return this._OrganizacionId;
            }
            set
            {
                if (this._OrganizacionId != value)
                {
                    this.OnOrganizacionIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrganizacionId = value;
                    this.SendPropertyChanged("OrganizacionId");
                    this.OnOrganizacionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL")]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OrganizacionKey in the schema.
        /// </summary>
        [Column(Name = @"ORGANIZACION_KEY", Storage = "_OrganizacionKey", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL")]
        public string OrganizacionKey
        {
            get
            {
                return this._OrganizacionKey;
            }
            set
            {
                if (this._OrganizacionKey != value)
                {
                    this.OnOrganizacionKeyChanging(value);
                    this.SendPropertyChanging();
                    this._OrganizacionKey = value;
                    this.SendPropertyChanged("OrganizacionKey");
                    this.OnOrganizacionKeyChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activo in the schema.
        /// </summary>
        [Column(Name = @"ACTIVO", Storage = "_Activo", DbType = "BIT")]
        public System.Nullable<bool> Activo
        {
            get
            {
                return this._Activo;
            }
            set
            {
                if (this._Activo != value)
                {
                    this.OnActivoChanging(value);
                    this.SendPropertyChanging();
                    this._Activo = value;
                    this.SendPropertyChanged("Activo");
                    this.OnActivoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [Column(Name = @"DIRECCION", Storage = "_Direccion", DbType = "VARCHAR(512)")]
        public string Direccion
        {
            get
            {
                return this._Direccion;
            }
            set
            {
                if (this._Direccion != value)
                {
                    this.OnDireccionChanging(value);
                    this.SendPropertyChanging();
                    this._Direccion = value;
                    this.SendPropertyChanged("Direccion");
                    this.OnDireccionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [Column(Name = @"EMAIL", Storage = "_Email", DbType = "VARCHAR(512)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fechainicio in the schema.
        /// </summary>
        [Column(Name = @"FECHAINICIO", Storage = "_Fechainicio", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> Fechainicio
        {
            get
            {
                return this._Fechainicio;
            }
            set
            {
                if (this._Fechainicio != value)
                {
                    this.OnFechainicioChanging(value);
                    this.SendPropertyChanging();
                    this._Fechainicio = value;
                    this.SendPropertyChanged("Fechainicio");
                    this.OnFechainicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fechafin in the schema.
        /// </summary>
        [Column(Name = @"FECHAFIN", Storage = "_Fechafin", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> Fechafin
        {
            get
            {
                return this._Fechafin;
            }
            set
            {
                if (this._Fechafin != value)
                {
                    this.OnFechafinChanging(value);
                    this.SendPropertyChanging();
                    this._Fechafin = value;
                    this.SendPropertyChanged("Fechafin");
                    this.OnFechafinChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecOrganizacion_SecPerfil", Storage="_SecPerfils", OtherKey="OrganizacionId")]
        public EntitySet<SecPerfil> SecPerfils
        {
            get
            {
                return this._SecPerfils;
            }
            set
            {
                this._SecPerfils.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecOrganizacion_SecUsuario", Storage="_SecUsuarios", OtherKey="OrganizacionId")]
        public EntitySet<SecUsuario> SecUsuarios
        {
            get
            {
                return this._SecUsuarios;
            }
            set
            {
                this._SecUsuarios.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_SecPerfils(SecPerfil entity)
        {
            this.SendPropertyChanging("SecPerfils");
            entity.SecOrganizacion = this;
        }
    
        private void detach_SecPerfils(SecPerfil entity)
        {
            this.SendPropertyChanging("SecPerfils");
            entity.SecOrganizacion = null;
        }

        private void attach_SecUsuarios(SecUsuario entity)
        {
            this.SendPropertyChanging("SecUsuarios");
            entity.SecOrganizacion = this;
        }
    
        private void detach_SecUsuarios(SecUsuario entity)
        {
            this.SendPropertyChanging("SecUsuarios");
            entity.SecOrganizacion = null;
        }
    }


    /// <summary>
    /// There are no comments for SecPerfil in the schema.
    /// </summary>
    [Table(Name = @"[dbo].SEC_PERFIL")]
    public partial class SecPerfil : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _SegPerfilId;

        private int _OrganizacionId;

        private string _Nombre;

        private System.Nullable<bool> _Activo;

        private bool _EsAdmin;

        private EntityRef<SecOrganizacion> _SecOrganizacion;

        private EntitySet<SecPerfilOpcion> _SecPerfilOpcions;

        private EntitySet<SecUsuario> _SecUsuarios;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSegPerfilIdChanging(int value);
        partial void OnSegPerfilIdChanged();
        partial void OnOrganizacionIdChanging(int value);
        partial void OnOrganizacionIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnActivoChanging(System.Nullable<bool> value);
        partial void OnActivoChanged();
        partial void OnEsAdminChanging(bool value);
        partial void OnEsAdminChanged();
        #endregion

        public SecPerfil()
        {
            this._SecOrganizacion  = default(EntityRef<SecOrganizacion>);
            this._SecPerfilOpcions = new EntitySet<SecPerfilOpcion>(new Action<SecPerfilOpcion>(this.attach_SecPerfilOpcions), new Action<SecPerfilOpcion>(this.detach_SecPerfilOpcions));
            this._SecUsuarios = new EntitySet<SecUsuario>(new Action<SecUsuario>(this.attach_SecUsuarios), new Action<SecUsuario>(this.detach_SecUsuarios));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SegPerfilId in the schema.
        /// </summary>
        [Column(Name = @"SEG_PERFIL_ID", Storage = "_SegPerfilId", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int SegPerfilId
        {
            get
            {
                return this._SegPerfilId;
            }
            set
            {
                if (this._SegPerfilId != value)
                {
                    this.OnSegPerfilIdChanging(value);
                    this.SendPropertyChanging();
                    this._SegPerfilId = value;
                    this.SendPropertyChanged("SegPerfilId");
                    this.OnSegPerfilIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OrganizacionId in the schema.
        /// </summary>
        [Column(Name = @"ORGANIZACION_ID", Storage = "_OrganizacionId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int OrganizacionId
        {
            get
            {
                return this._OrganizacionId;
            }
            set
            {
                if (this._OrganizacionId != value)
                {
                    if (this._SecOrganizacion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnOrganizacionIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrganizacionId = value;
                    this.SendPropertyChanged("OrganizacionId");
                    this.OnOrganizacionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL")]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activo in the schema.
        /// </summary>
        [Column(Name = @"ACTIVO", Storage = "_Activo", DbType = "BIT")]
        public System.Nullable<bool> Activo
        {
            get
            {
                return this._Activo;
            }
            set
            {
                if (this._Activo != value)
                {
                    this.OnActivoChanging(value);
                    this.SendPropertyChanging();
                    this._Activo = value;
                    this.SendPropertyChanged("Activo");
                    this.OnActivoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EsAdmin in the schema.
        /// </summary>
        [Column(Name = @"ES_ADMIN", Storage = "_EsAdmin", CanBeNull = false, DbType = "BIT NOT NULL")]
        public bool EsAdmin
        {
            get
            {
                return this._EsAdmin;
            }
            set
            {
                if (this._EsAdmin != value)
                {
                    this.OnEsAdminChanging(value);
                    this.SendPropertyChanging();
                    this._EsAdmin = value;
                    this.SendPropertyChanged("EsAdmin");
                    this.OnEsAdminChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecOrganizacion_SecPerfil", Storage="_SecOrganizacion", ThisKey="OrganizacionId", IsForeignKey=true)]
        public SecOrganizacion SecOrganizacion
        {
            get
            {
                return this._SecOrganizacion.Entity;
            }
            set
            {
                SecOrganizacion previousValue = this._SecOrganizacion.Entity;
                if ((previousValue != value) || (this._SecOrganizacion.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecOrganizacion.Entity = null;
                        previousValue.SecPerfils.Remove(this);
                    }
                    this._SecOrganizacion.Entity = value;
                    if (value != null)
                    {
                        this._OrganizacionId = value.OrganizacionId;
                        value.SecPerfils.Add(this);
                    }
                    else
                    {
                        this._OrganizacionId = default(int);
                    }
                    this.SendPropertyChanged("SecOrganizacion");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecPerfil_SecPerfilOpcion", Storage="_SecPerfilOpcions", OtherKey="SecPerfilId")]
        public EntitySet<SecPerfilOpcion> SecPerfilOpcions
        {
            get
            {
                return this._SecPerfilOpcions;
            }
            set
            {
                this._SecPerfilOpcions.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecPerfil_SecUsuario", Storage="_SecUsuarios", OtherKey="PerfilId")]
        public EntitySet<SecUsuario> SecUsuarios
        {
            get
            {
                return this._SecUsuarios;
            }
            set
            {
                this._SecUsuarios.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_SecPerfilOpcions(SecPerfilOpcion entity)
        {
            this.SendPropertyChanging("SecPerfilOpcions");
            entity.SecPerfil = this;
        }
    
        private void detach_SecPerfilOpcions(SecPerfilOpcion entity)
        {
            this.SendPropertyChanging("SecPerfilOpcions");
            entity.SecPerfil = null;
        }

        private void attach_SecUsuarios(SecUsuario entity)
        {
            this.SendPropertyChanging("SecUsuarios");
            entity.SecPerfil = this;
        }
    
        private void detach_SecUsuarios(SecUsuario entity)
        {
            this.SendPropertyChanging("SecUsuarios");
            entity.SecPerfil = null;
        }
    }


    /// <summary>
    /// There are no comments for SecPerfilOpcion in the schema.
    /// </summary>
    [Table(Name = @"[dbo].SEC_PERFIL_OPCION")]
    public partial class SecPerfilOpcion : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _SecPerfilOpcionId;

        private int _SecOpcionId;

        private int _SecPerfilId;

        private System.Nullable<bool> _Activo;

        private EntityRef<SecOpcion> _SecOpcion;

        private EntityRef<SecPerfil> _SecPerfil;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSecPerfilOpcionIdChanging(int value);
        partial void OnSecPerfilOpcionIdChanged();
        partial void OnSecOpcionIdChanging(int value);
        partial void OnSecOpcionIdChanged();
        partial void OnSecPerfilIdChanging(int value);
        partial void OnSecPerfilIdChanged();
        partial void OnActivoChanging(System.Nullable<bool> value);
        partial void OnActivoChanged();
        #endregion

        public SecPerfilOpcion()
        {
            this._SecOpcion  = default(EntityRef<SecOpcion>);
            this._SecPerfil  = default(EntityRef<SecPerfil>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SecPerfilOpcionId in the schema.
        /// </summary>
        [Column(Name = @"SEC_PERFIL_OPCION_ID", Storage = "_SecPerfilOpcionId", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int SecPerfilOpcionId
        {
            get
            {
                return this._SecPerfilOpcionId;
            }
            set
            {
                if (this._SecPerfilOpcionId != value)
                {
                    this.OnSecPerfilOpcionIdChanging(value);
                    this.SendPropertyChanging();
                    this._SecPerfilOpcionId = value;
                    this.SendPropertyChanged("SecPerfilOpcionId");
                    this.OnSecPerfilOpcionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SecOpcionId in the schema.
        /// </summary>
        [Column(Name = @"SEC_OPCION_ID", Storage = "_SecOpcionId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int SecOpcionId
        {
            get
            {
                return this._SecOpcionId;
            }
            set
            {
                if (this._SecOpcionId != value)
                {
                    if (this._SecOpcion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSecOpcionIdChanging(value);
                    this.SendPropertyChanging();
                    this._SecOpcionId = value;
                    this.SendPropertyChanged("SecOpcionId");
                    this.OnSecOpcionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SecPerfilId in the schema.
        /// </summary>
        [Column(Name = @"SEC_PERFIL_ID", Storage = "_SecPerfilId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int SecPerfilId
        {
            get
            {
                return this._SecPerfilId;
            }
            set
            {
                if (this._SecPerfilId != value)
                {
                    if (this._SecPerfil.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSecPerfilIdChanging(value);
                    this.SendPropertyChanging();
                    this._SecPerfilId = value;
                    this.SendPropertyChanged("SecPerfilId");
                    this.OnSecPerfilIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activo in the schema.
        /// </summary>
        [Column(Name = @"ACTIVO", Storage = "_Activo", DbType = "BIT")]
        public System.Nullable<bool> Activo
        {
            get
            {
                return this._Activo;
            }
            set
            {
                if (this._Activo != value)
                {
                    this.OnActivoChanging(value);
                    this.SendPropertyChanging();
                    this._Activo = value;
                    this.SendPropertyChanged("Activo");
                    this.OnActivoChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecOpcion_SecPerfilOpcion", Storage="_SecOpcion", ThisKey="SecOpcionId", IsForeignKey=true)]
        public SecOpcion SecOpcion
        {
            get
            {
                return this._SecOpcion.Entity;
            }
            set
            {
                SecOpcion previousValue = this._SecOpcion.Entity;
                if ((previousValue != value) || (this._SecOpcion.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecOpcion.Entity = null;
                        previousValue.SecPerfilOpcions.Remove(this);
                    }
                    this._SecOpcion.Entity = value;
                    if (value != null)
                    {
                        this._SecOpcionId = value.SecOpcionId;
                        value.SecPerfilOpcions.Add(this);
                    }
                    else
                    {
                        this._SecOpcionId = default(int);
                    }
                    this.SendPropertyChanged("SecOpcion");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecPerfil_SecPerfilOpcion", Storage="_SecPerfil", ThisKey="SecPerfilId", IsForeignKey=true)]
        public SecPerfil SecPerfil
        {
            get
            {
                return this._SecPerfil.Entity;
            }
            set
            {
                SecPerfil previousValue = this._SecPerfil.Entity;
                if ((previousValue != value) || (this._SecPerfil.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecPerfil.Entity = null;
                        previousValue.SecPerfilOpcions.Remove(this);
                    }
                    this._SecPerfil.Entity = value;
                    if (value != null)
                    {
                        this._SecPerfilId = value.SegPerfilId;
                        value.SecPerfilOpcions.Add(this);
                    }
                    else
                    {
                        this._SecPerfilId = default(int);
                    }
                    this.SendPropertyChanged("SecPerfil");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }


    /// <summary>
    /// There are no comments for SecUsuario in the schema.
    /// </summary>
    [Table(Name = @"[dbo].SEC_USUARIO")]
    public partial class SecUsuario : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _SegUsuarioId;

        private int _PerfilId;

        private int _OrganizacionId;

        private string _Username;

        private string _Nombre;

        private string _Apellido;

        private string _Email;

        private System.Nullable<bool> _Activo;

        private string _Password;

        private bool _EsAdmin;

        private System.Nullable<bool> _CambiaPassword;

        private System.Nullable<System.DateTime> _FechaPassword;

        private EntityRef<SecOrganizacion> _SecOrganizacion;

        private EntityRef<SecPerfil> _SecPerfil;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSegUsuarioIdChanging(int value);
        partial void OnSegUsuarioIdChanged();
        partial void OnPerfilIdChanging(int value);
        partial void OnPerfilIdChanged();
        partial void OnOrganizacionIdChanging(int value);
        partial void OnOrganizacionIdChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnActivoChanging(System.Nullable<bool> value);
        partial void OnActivoChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnEsAdminChanging(bool value);
        partial void OnEsAdminChanged();
        partial void OnCambiaPasswordChanging(System.Nullable<bool> value);
        partial void OnCambiaPasswordChanged();
        partial void OnFechaPasswordChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaPasswordChanged();
        #endregion

        public SecUsuario()
        {
            this._SecOrganizacion  = default(EntityRef<SecOrganizacion>);
            this._SecPerfil  = default(EntityRef<SecPerfil>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SegUsuarioId in the schema.
        /// </summary>
        [Column(Name = @"SEG_USUARIO_ID", Storage = "_SegUsuarioId", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int SegUsuarioId
        {
            get
            {
                return this._SegUsuarioId;
            }
            set
            {
                if (this._SegUsuarioId != value)
                {
                    this.OnSegUsuarioIdChanging(value);
                    this.SendPropertyChanging();
                    this._SegUsuarioId = value;
                    this.SendPropertyChanged("SegUsuarioId");
                    this.OnSegUsuarioIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PerfilId in the schema.
        /// </summary>
        [Column(Name = @"PERFIL_ID", Storage = "_PerfilId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int PerfilId
        {
            get
            {
                return this._PerfilId;
            }
            set
            {
                if (this._PerfilId != value)
                {
                    if (this._SecPerfil.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPerfilIdChanging(value);
                    this.SendPropertyChanging();
                    this._PerfilId = value;
                    this.SendPropertyChanged("PerfilId");
                    this.OnPerfilIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OrganizacionId in the schema.
        /// </summary>
        [Column(Name = @"ORGANIZACION_ID", Storage = "_OrganizacionId", CanBeNull = false, DbType = "INT NOT NULL")]
        public int OrganizacionId
        {
            get
            {
                return this._OrganizacionId;
            }
            set
            {
                if (this._OrganizacionId != value)
                {
                    if (this._SecOrganizacion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnOrganizacionIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrganizacionId = value;
                    this.SendPropertyChanged("OrganizacionId");
                    this.OnOrganizacionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Username in the schema.
        /// </summary>
        [Column(Name = @"USERNAME", Storage = "_Username", CanBeNull = false, DbType = "VARCHAR(20) NOT NULL")]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if (this._Username != value)
                {
                    this.OnUsernameChanging(value);
                    this.SendPropertyChanging();
                    this._Username = value;
                    this.SendPropertyChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"NOMBRE", Storage = "_Nombre", DbType = "VARCHAR(100)")]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"APELLIDO", Storage = "_Apellido", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL")]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging();
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [Column(Name = @"EMAIL", Storage = "_Email", CanBeNull = false, DbType = "VARCHAR(512) NOT NULL")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activo in the schema.
        /// </summary>
        [Column(Name = @"ACTIVO", Storage = "_Activo", DbType = "BIT")]
        public System.Nullable<bool> Activo
        {
            get
            {
                return this._Activo;
            }
            set
            {
                if (this._Activo != value)
                {
                    this.OnActivoChanging(value);
                    this.SendPropertyChanging();
                    this._Activo = value;
                    this.SendPropertyChanged("Activo");
                    this.OnActivoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Password in the schema.
        /// </summary>
        [Column(Name = @"PASSWORD", Storage = "_Password", DbType = "VARCHAR(200)")]
        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                if (this._Password != value)
                {
                    this.OnPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._Password = value;
                    this.SendPropertyChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EsAdmin in the schema.
        /// </summary>
        [Column(Name = @"ES_ADMIN", Storage = "_EsAdmin", CanBeNull = false, DbType = "BIT NOT NULL")]
        public bool EsAdmin
        {
            get
            {
                return this._EsAdmin;
            }
            set
            {
                if (this._EsAdmin != value)
                {
                    this.OnEsAdminChanging(value);
                    this.SendPropertyChanging();
                    this._EsAdmin = value;
                    this.SendPropertyChanged("EsAdmin");
                    this.OnEsAdminChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CambiaPassword in the schema.
        /// </summary>
        [Column(Name = @"CAMBIA_PASSWORD", Storage = "_CambiaPassword", DbType = "BIT")]
        public System.Nullable<bool> CambiaPassword
        {
            get
            {
                return this._CambiaPassword;
            }
            set
            {
                if (this._CambiaPassword != value)
                {
                    this.OnCambiaPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._CambiaPassword = value;
                    this.SendPropertyChanged("CambiaPassword");
                    this.OnCambiaPasswordChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaPassword in the schema.
        /// </summary>
        [Column(Name = @"FECHA_PASSWORD", Storage = "_FechaPassword", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> FechaPassword
        {
            get
            {
                return this._FechaPassword;
            }
            set
            {
                if (this._FechaPassword != value)
                {
                    this.OnFechaPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._FechaPassword = value;
                    this.SendPropertyChanged("FechaPassword");
                    this.OnFechaPasswordChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecOrganizacion_SecUsuario", Storage="_SecOrganizacion", ThisKey="OrganizacionId", IsForeignKey=true)]
        public SecOrganizacion SecOrganizacion
        {
            get
            {
                return this._SecOrganizacion.Entity;
            }
            set
            {
                SecOrganizacion previousValue = this._SecOrganizacion.Entity;
                if ((previousValue != value) || (this._SecOrganizacion.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecOrganizacion.Entity = null;
                        previousValue.SecUsuarios.Remove(this);
                    }
                    this._SecOrganizacion.Entity = value;
                    if (value != null)
                    {
                        this._OrganizacionId = value.OrganizacionId;
                        value.SecUsuarios.Add(this);
                    }
                    else
                    {
                        this._OrganizacionId = default(int);
                    }
                    this.SendPropertyChanged("SecOrganizacion");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="SecPerfil_SecUsuario", Storage="_SecPerfil", ThisKey="PerfilId", IsForeignKey=true)]
        public SecPerfil SecPerfil
        {
            get
            {
                return this._SecPerfil.Entity;
            }
            set
            {
                SecPerfil previousValue = this._SecPerfil.Entity;
                if ((previousValue != value) || (this._SecPerfil.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SecPerfil.Entity = null;
                        previousValue.SecUsuarios.Remove(this);
                    }
                    this._SecPerfil.Entity = value;
                    if (value != null)
                    {
                        this._PerfilId = value.SegPerfilId;
                        value.SecUsuarios.Add(this);
                    }
                    else
                    {
                        this._PerfilId = default(int);
                    }
                    this.SendPropertyChanged("SecPerfil");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
